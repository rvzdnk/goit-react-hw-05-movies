{"version":3,"file":"static/js/53.63d5c72e.chunk.js","mappings":"mSACMA,EAAU,mCACVC,EAAW,gCAEJC,EAAW,mCAAG,+GAEIC,IAAAA,IAAA,UAAaF,EAAb,sCAAmDD,IAFvD,cAEbI,EAFa,OAGbC,EAAeD,EAASE,KAAKC,QAHhB,kBAIZF,GAJY,gCAMnBG,QAAQC,IAAR,MANmB,yDAAH,qDAUXC,EAAc,mCAAG,WAAMC,GAAN,kGAECR,IAAAA,IAAA,UAAaF,EAAb,iBAA8BU,EAA9B,oBAAiDX,IAFlD,cAEhBI,EAFgB,OAGhBC,EAAeD,EAASE,KAHR,kBAIfD,GAJe,gCAMtBG,QAAQC,IAAR,MANsB,yDAAH,sDAUdG,EAAa,mCAAG,WAAOD,EAASE,GAAhB,kGAEEV,IAAAA,IAAA,UAAaF,EAAb,iBAA8BU,EAA9B,YAAyCE,EAAzC,oBAA0Db,IAF5D,cAEfI,EAFe,OAGfC,EAAeD,EAASE,KAHT,kBAIdD,GAJc,gCAMrBG,QAAQC,IAAR,MANqB,yDAAH,wDAUbK,EAAkB,mCAAG,WAAMC,GAAN,kGAEHZ,IAAAA,IAAA,UAAaF,EAAb,gCAA6CD,EAA7C,kBAA8De,EAA9D,gCAFG,cAEpBX,EAFoB,OAGpBC,EAAeD,EAASE,KAAKC,QAHT,kBAInBF,GAJmB,gCAM1BG,QAAQC,IAAR,MAN0B,yDAAH,qD,8KChClBO,EAAeC,EAAAA,GAAAA,IAAH,qI,SCCZC,EAAe,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACnBC,EAAqED,EAArEC,YAAaC,EAAwDF,EAAxDE,aAAcC,EAA0CH,EAA1CG,MAAOC,EAAmCJ,EAAnCI,aAAcC,EAAqBL,EAArBK,SAAUC,EAAWN,EAAXM,OAE5DC,EAAc,IAAIC,KAAKN,GAAcO,cACrCC,EAAS,WAAsB,GAAfN,GAAmBO,QAAQ,GAAlC,KACTC,EAAS,OAAGN,QAAH,IAAGA,OAAH,EAAGA,EAAQO,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MAExD,OACI,UAACnB,EAAD,YACI,0BACI,gBACIoB,IAAKhB,GAAW,yCAAsCA,GACtDiB,IAAG,kBAGX,4BACI,kCAAQf,EAAR,aAAkBI,EAAlB,QACA,6CAAmBG,MACnB,sCACA,uBAAIL,KACJ,oCACA,iCAAOO,UAItB,EC1BYO,EAAUrB,EAAAA,GAAAA,IAAH,wHAOPsB,EAAWtB,EAAAA,GAAAA,GAAH,gDCiCrB,EAlCyB,WAAO,IAAD,IAC3B,GAAkCuB,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOrB,EAAP,KAAkBsB,EAAlB,KACQ9B,GAAY+B,EAAAA,EAAAA,MAAZ/B,QACFgC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAU7C,OARAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,mCAAG,qGACGvC,EAAAA,EAAAA,IAAeC,GADlB,OACXuC,EADW,OAEjBT,EAAaS,GAFI,2CAAH,qDAIlBD,GACH,GAAE,CAACtC,KAGA,4BACI,SAAC,KAAD,CAAMwC,GAAIN,EAAV,mCACA,SAAC3B,EAAD,CAAcC,UAAWA,KACzB,UAACmB,EAAD,YACI,oDACA,2BACI,SAACC,EAAD,WACI,SAAC,KAAD,CAAMY,GAAG,OAAOL,MAAOH,EAASG,MAAhC,qBAEJ,SAACP,EAAD,WACI,SAAC,KAAD,CAAMY,GAAG,UAAUL,MAAOH,EAASG,MAAnC,8BAIZ,SAAC,KAAD,MAGX,C","sources":["api/fetchMovies.js","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage/MovieDetailsPage.styled.js","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'caf4817d038ad000058dc20ea7aa15f5';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchMovies = async () => {\n    try {\n        const response = await axios.get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`);\n        const responseData = response.data.results;\n        return responseData;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchMovieById = async movieId => {\n    try {\n        const response = await axios.get(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`);\n        const responseData = response.data;\n        return responseData;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchMovieAdd = async (movieId, param) => {\n    try {\n        const response = await axios.get(`${BASE_URL}movie/${movieId}/${param}?api_key=${API_KEY}`);\n        const responseData = response.data;\n        return responseData;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchMoviesByQuery = async query => {\n    try {\n        const response = await axios.get(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`);\n        const responseData = response.data.results;\n        return responseData;\n    } catch (error) {\n        console.log(error);\n    }\n};\n","import styled from \"styled-components\";\n\nexport const ImageWrapper = styled.div`\n  display: flex;\n  padding: 8px 0;\n  gap: 16px;\n  padding-left: 14px;\n  border-bottom: 1px solid black;\n`;","import React from \"react\";\nimport { ImageWrapper } from './MovieDetails.styled';\n\nexport const MovieDetails = ({ movieById }) => {\n    const { poster_path, release_date, title, vote_average, overview, genres } = movieById;\n\n    const releaseYear = new Date(release_date).getFullYear();\n    const userScore = `${(vote_average * 10).toFixed(0)}%`;\n    const genreName = genres?.map(genre => genre.name).join(', ');\n\n    return (\n        <ImageWrapper>\n            <div>\n                <img\n                    src={poster_path && `https://image.tmdb.org/t/p/w500${poster_path}`}\n                    alt={`No display`}\n                />\n            </div>\n            <div>\n                <h2>{`${title} (${releaseYear})`}</h2>\n                <p>{`User score: ${userScore}`}</p>\n                <h3>Overview</h3>\n                <p>{overview}</p>\n                <h3>Genres</h3>\n                <p>{`${genreName}`}</p>\n            </div>\n        </ImageWrapper>\n    )\n}","import styled from \"styled-components\";\n\nexport const AddInfo = styled.div`\n  gap: 16px;\n  margin-bottom: 16px;\n  padding-left: 14px;\n  border-bottom: 1px solid black;\n`;\n\nexport const InfoItem = styled.li`\n  padding-bottom: 5px;\n`;","import { useState, useEffect } from 'react';\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { Outlet } from \"react-router-dom\";\nimport { fetchMovieById } from \"api/fetchMovies\";\nimport { MovieDetails } from 'components/MovieDetails/MovieDetails';\nimport { AddInfo, InfoItem } from \"./MovieDetailsPage.styled\";\n\nconst MovieDetailsPage = () => {\n    const [movieById, setMovieById] = useState({})\n    const { movieId } = useParams();\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/movies\";\n\n    useEffect(() => {\n        const getMovieById = async () => {\n            const movie = await fetchMovieById(movieId);\n            setMovieById(movie);\n        }\n        getMovieById();\n    }, [movieId]);\n\n    return (\n        <div>\n            <Link to={backLinkHref}>&#129044; Go back</Link>\n            <MovieDetails movieById={movieById}/>\n            <AddInfo>\n                <h4>Additional information</h4>\n                <ul>\n                    <InfoItem>\n                        <Link to=\"cast\" state={location.state}>Cast</Link>\n                    </InfoItem>\n                    <InfoItem>\n                        <Link to=\"reviews\" state={location.state}>Reviews</Link>\n                    </InfoItem>\n                </ul>\n            </AddInfo>\n            <Outlet />\n        </div>\n    );\n};\n\nexport default MovieDetailsPage;"],"names":["API_KEY","BASE_URL","fetchMovies","axios","response","responseData","data","results","console","log","fetchMovieById","movieId","fetchMovieAdd","param","fetchMoviesByQuery","query","ImageWrapper","styled","MovieDetails","movieById","poster_path","release_date","title","vote_average","overview","genres","releaseYear","Date","getFullYear","userScore","toFixed","genreName","map","genre","name","join","src","alt","AddInfo","InfoItem","useState","setMovieById","useParams","location","useLocation","backLinkHref","state","from","useEffect","getMovieById","movie","to"],"sourceRoot":""}